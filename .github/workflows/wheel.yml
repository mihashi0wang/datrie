name: Build datrie wheels for Windows

on:
  workflow_dispatch:

env:
  CIBW_TEST_REQUIRES: pytest six
  CIBW_TEST_COMMAND: pytest {project}/test
  CIBW_SKIP: "pp* cp36*"

jobs:
  build_amd64:
    name: Build AMD64 wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]
    env:
      ICU_ARCH: 64
      ICU_PLAT: Win64-MSVC2022
    steps:
      - uses: actions/checkout@v4
      - run: download.cmd
        shell: cmd
      - uses: pypa/cibuildwheel@v2.23.1
        env:
          CIBW_ARCHS_WINDOWS: AMD64
          CIBW_ENVIRONMENT_WINDOWS: INCLUDE="include;$INCLUDE" LIB="lib$ICU_ARCH;$LIB"
      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: wheels-win-amd64
  build_arm64:
    name: Build ARM64 wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
    env:
      ICU_ARCH: ARM64
      ICU_PLAT: WinARM64-MSVC2022
    steps:
      - uses: actions/checkout@v4
      - run: download.cmd
        shell: cmd
      - uses: pypa/cibuildwheel@v2.23.1
        env:
          CIBW_SKIP: "pp* cp36* cp37* cp38* cp39* cp310*"
          CIBW_ARCHS_WINDOWS: ARM64
          CIBW_ENVIRONMENT_WINDOWS: INCLUDE="include;$INCLUDE" LIB="lib$ICU_ARCH;$LIB"
      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: wheels-win-arm64
  build_x86:
    name: Build x86 wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
    env:
      ICU_PLAT: Win32-MSVC2022
    steps:
      - uses: actions/checkout@v4
      - run: download.cmd
        shell: cmd
      - uses: pypa/cibuildwheel@v2.23.1
        env:
          CIBW_ARCHS_WINDOWS: x86
          CIBW_ENVIRONMENT_WINDOWS: INCLUDE="include;$INCLUDE" LIB="lib$ICU_ARCH;$LIB"
      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: wheels-win32
